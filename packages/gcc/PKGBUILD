# Maintainer: protonesso <nagakamira@gmail.com>
# Contributor: protonesso <nagakamira@gmail.com>

pkgname=('gcc' 'gcc-libs')
pkgbase=gcc
pkgver=8+20181102
snapver=8.2.1
pkgrel=7
arch=('x86_64' 'i586' 'aarch64' 'arm')
url="http://www.gnu.org/software/bison"
license=('GPL' 'LGPL' 'FDL' 'custom')
makedepends=('linux-headers' 'glibc' 'zlib' 'binutils' 'gmp' 'mpfr' 'mpc' 'isl')
options=('staticlibs' '!emptydirs')
source=(http://mirror.linux-ia64.org/gnu/gcc/snapshots/${pkgver/+/-}/$pkgbase-${pkgver/+/-}.tar.xz
	0001-Fix-stack-protection-issues.patch
	openmp-vectorize-v2.patch
	fortran-vector-v2.patch
	optimize.patch
	ipa-cp.patch
	optimize-at-least-some.patch
	gomp-relax.patch
	avx512-when-we-ask-for-it.patch
	hj.patch
	pow-optimization.patch
	zero-regs-gcc8.patch
	hj-patch-round.patch
	c89
	c99)
md5sums=('e017a6f5a6f5d5e7de323b11efc59121'
         '71798cd205d3401ab29ba79c8e45ef70'
         'a767abde6eadd3fe3a573e990a195588'
         'a6799d6442237da22d6e13507cc7dfb2'
         '522c1cfbbb099cfc7287978d673a2f26'
         '4c9bf1aebd3f809ddeebb24137829238'
         'f1c4a280552cf963d88692c988daa74f'
         '3e9ce4d3a022245451566e93804f40c0'
         '1c97a9d030e35fb0147568e56c58bd8f'
         'b2089d68ddcd7e4708851be77ad436c6'
         '68ce9f34f638ba0a55dc2e67935f1306'
         '865817b81a3766d6640a4b68e0698860'
         '19f27d672b8be161d1c46e3137d0362e'
         '99691641ab044836a25fbcb73a1943cf'
         'ee387395de79f09b491857f8fbb5551d')

prepare() {
	cd $pkgbase-${pkgver/+/-}
	patch -p1 -i $srcdir/0001-Fix-stack-protection-issues.patch
	patch -p1 -i $srcdir/openmp-vectorize-v2.patch
	patch -p1 -i $srcdir/fortran-vector-v2.patch
	patch -p1 -i $srcdir/optimize.patch
	patch -p1 -i $srcdir/ipa-cp.patch
	patch -p1 -i $srcdir/optimize-at-least-some.patch
	patch -p1 -i $srcdir/gomp-relax.patch
	patch -p1 -i $srcdir/avx512-when-we-ask-for-it.patch
	patch -p1 -i $srcdir/hj.patch
	patch -p1 -i $srcdir/pow-optimization.patch
	patch -p1 -i $srcdir/zero-regs-gcc8.patch
	patch -p1 -i $srcdir/hj-patch-round.patch

	sed -i 's@\./fixinc\.sh@-c true@' gcc/Makefile.in
	sed -i '/m64=/s/lib64/lib/' gcc/config/i386/t-linux64
	sed -i '/lp64=/s/lib64/lib/' gcc/config/aarch64/t-aarch64-linux

	mkdir build
}

build() {
	export CFLAGS="$CFLAGS"
	export CXXFLAGS="$CFLAGS"
	export FFLAGS="$CFLAGS"
	export CFLAGS_FOR_TARGET="$CFLAGS"
	export CXXFLAGS_FOR_TARGET="$CXXFLAGS"
	export FFLAGS_FOR_TARGET="$FFLAGS"

	cd $pkgbase-${pkgver/+/-}
	cd build
	../configure \
		--prefix=/usr \
		--libdir=/usr/lib \
		--libexecdir=/usr/lib \
		--build=$CHOST $GCCOPTS \
		--with-pkgversion="Minitena $pkgver" \
		--with-bugurl='https://github.com/minitena/source/issues' \
		--with-system-zlib \
		--enable-__cxa_atexit \
		--enable-bootstrap \
		--enable-checking=release \
		--enable-clocale=gnu \
		--enable-default-pie \
		--enable-default-ssp \
		--enable-gnu-indirect-function \
		--enable-gnu-unique-object \
		--enable-languages=c,c++,lto,fortran,go,objc,obj-c++ \
		--enable-install-libiberty \
		--enable-linker-build-id \
		--enable-lto \
		--enable-plugin \
		--enable-shared \
		--enable-threads=posix \
		--disable-libmpx \
		--disable-libstdcxx-pch \
		--disable-libunwind-exceptions \
		--disable-multilib \
		--disable-nls \
		--disable-werror
	make profiledbootstrap
}

package_gcc-libs() {
	pkgdesc='Runtime libraries shipped by GCC'
	depends=('glibc')

	cd $pkgbase-${pkgver/+/-}
	cd build
	make -j1 DESTDIR=$pkgdir install

	mkdir $srcdir/libs
	mv $pkgdir/usr/lib/*.so{,.*} $srcdir/libs
	rm -rf $pkgdir
	mkdir -p $pkgdir/usr/lib
	mv $srcdir/libs/* $pkgdir/usr/lib/

	rm -rf $pkgdir/usr/lib/*gdb.py
}

package_gcc() {
	pkgdesc="The GNU Compiler Collection"
	depends=('linux-headers' 'glibc' 'gcc-libs' 'zlib' 'binutils' 'gmp' 'mpfr' 'mpc' 'isl')

	cd $pkgbase-${pkgver/+/-}
	cd build
	make -j1 DESTDIR=$pkgdir install

	ln -sf gcc $pkgdir/usr/bin/cc

	install -Dm755 $srcdir/c89 $pkgdir/usr/bin/c89
	install -Dm755 $srcdir/c99 $pkgdir/usr/bin/c99

	ln -sf gfortran $pkgdir/usr/bin/f95

	ln -sf ../bin/cpp $pkgdir/usr/lib

	install -dm755 $pkgdir/usr/lib/bfd-plugins/
	ln -sf /usr/lib/gcc/$CHOST/${snapver}/liblto_plugin.so $pkgdir/usr/lib/bfd-plugins/

	mkdir -p $pkgdir/usr/share/gdb/auto-load/usr/lib
	mv $pkgdir/usr/lib/*gdb.py $pkgdir/usr/share/gdb/auto-load/usr/lib

	mkdir -p $pkgdir/usr/lib/go/${snapver}/$CHOST/bin
	mv $pkgdir/usr/bin/go $pkgdir/usr/lib/go/${snapver}/$CHOST/bin
	mv $pkgdir/usr/bin/gofmt $pkgdir/usr/lib/go/${snapver}/$CHOST/bin

	ln -sf /usr/lib/go/${snapver}/$CHOST $pkgdir/usr/lib/gccgo

	# Provided by gcc-libs
	rm -rf $pkgdir/usr/lib/*.so{,.*}
}
